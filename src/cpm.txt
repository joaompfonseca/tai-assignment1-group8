Parameters
FILENAME
THRESHOLD
SMOOTHING_FACTOR
WINDOW_SIZE (K)

NÂº tries 

NÂº passes 1/2
1 passagem para conhecer o alfabeto
------------------------------------


"GATGAAGATTAG"
GAT

estimated_number_of_bits = 0




estimated_number_of_bits = ?
average number of bits per symbol = estimated_number_of_bits / len(str_value) ?

previous_positions = {sequence -> [positions]} (permite-nos saber vÃ¡rios)

- Iterate over the input string
    - Extract a sequence of size WINDOW_SIZE from the current position

    - Check if the sequence has occurred before
                - If sequence in previous_positions:
                    - get pointer
                - otherwhise we choose which pointer?

                - Retrieve a previous position of the sequence using the pointer
                - Update the positions list with the current position

                    - Iterate over the characters in the sequence (while hit_probability >= 0.2 and i + j < len(str_value))
                        (j is a second pointer, i + j is the current position in the string)
                        
                        - get predicted_char
                        - next_char = str_value[i + j]

                        - hit_probability = (hits + SMOOTHING_FACTOR) / (hits + misses + 2 * SMOOTHING_FACTOR)
                        - miss_probability = 1 - hit_probability

                        - Update sequence entry in previous_positions with the current position

                        - if hit (increment hits):
                        - else (increment misses):
                         - estimated_number_of_bits += log2(hit_probability)

                    - Update the current sequence pointer

    otherwhise (sequence not in previous_positions):
        - estimated_number_of_bits += -log2(1/len(str_value))
        - add current position to previous_positions



-log2(#alfabeto)